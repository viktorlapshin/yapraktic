"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const plugin = () => ({
    postcssPlugin: "used-keyframes",
    Once(css, { result }) {
        const keyframes = new Set();
        css.walkAtRules("keyframes", (atRule) => {
            if (atRule.params) {
                keyframes.add(atRule.params);
            }
        });
        if (keyframes.size === 0) {
            return;
        }
        const usedKeyframes = new Set();
        css.walkDecls("animation-name", (decl) => {
            if (decl.value) {
                decl.value
                    .toString()
                    .split(/\s*,\s*/)
                    .forEach((name) => {
                    if (keyframes.has(name)) {
                        usedKeyframes.add(name);
                    }
                });
            }
        });
        css.walkDecls("animation", (decl) => {
            if (decl.value) {
                decl.value
                    .toString()
                    .split(/\s*,\s*/)
                    .forEach((value) => {
                    value.split(/\s+/).forEach((v) => {
                        if (keyframes.has(v)) {
                            usedKeyframes.add(v);
                        }
                    });
                });
            }
        });
        if (usedKeyframes.size > 0) {
            result.messages.push({
                type: "used-keyframes",
                plugin: "used-keyframes",
                usedKeyframes: Array.from(usedKeyframes),
            });
        }
    },
});
plugin.postcss = true;
exports.default = plugin;
